[tox]
envlist = py3

[testenv]
# Dependencies prefixed with "ci: " are only installed when running in CI,
# which calls effectively "tox -e py3-ci" (see the gh-actions section below).
deps =
    pytest
    ci: pytest-github-actions-annotate-failures

# Some tests need an initialized FuseSoC library to be present. To make tests
# reproducible tox doesn't use the library installed into the user's home
# directory, but creates an isolated home directory within the tox working
# directory, and clears it out after each test.
commands =
    /bin/rm -rf {toxworkdir}/.tmp/homedir/.cache {toxworkdir}/.tmp/homedir/.local/share {toxworkdir}/.tmp/homedir/.config
    mkdir -p {toxworkdir}/.tmp/homedir/.config/fusesoc
    fusesoc --verbose library add --global fusesoc_cores https://github.com/fusesoc/fusesoc-cores
    fusesoc list-cores
    fusesoc library update
    pytest {posargs:-vv}

setenv =
    MODEL_TECH = dummy_value
    XDG_CACHE_HOME = {toxworkdir}/.tmp/homedir/.cache
    XDG_DATA_HOME= {toxworkdir}/.tmp/homedir/.local/share
    XDG_CONFIG_HOME = {toxworkdir}/.tmp/homedir/.config

passenv =
    GITHUB_ACTIONS

allowlist_externals =
  /bin/rm
  mkdir

[testenv:doc]
# Note: this target is *not* used by ReadTheDocs, which runs sphinx-build
# directly. Hence, all special build steps here are only relevant for
# local builds, not for RTD builds. Add all build steps which should be executed
# in RTD builds as Python code into the conf.py file.
description = Build the HTML documentation with Sphinx
deps = -rdoc/requirements.txt
commands =
    sphinx-build \
        --color \
        -bhtml \
        -d "{toxworkdir}/docs_doctree" \
        doc/source \
        "{toxworkdir}/docs_out" \
        {posargs}
    python -c 'import pathlib; print("The HTML documentation is available at file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:doc-autobuild]
description = Automatically (re-)build the HTML documentation with Sphinx
deps =
    -rdoc/requirements.txt
    sphinx-autobuild
commands =
    # capi2.rst is generated during the documentation build and would
    # immediately re-trigger a build. We ignore the generated file, and instead
    # watch the primary source of information for the generated file. Since
    # capi2.rst is also produced from some other files this check isn't fully
    # exhaustive, but covers most use cases.
    sphinx-autobuild \
        --open-browser \
        -d "{toxworkdir}/docs_doctree" \
        --ignore "*/doc/source/ref/capi2.rst" \
        --watch "fusesoc/capi2" \
        doc/source \
        "{toxworkdir}/docs_out" \
        {posargs}

# XXX: This setting is currently overwritten on the command line for CI builds
# (see the pipeline configuration) due to
# https://github.com/ymyzk/tox-gh-actions/issues/44.
#[gh-actions]
# Mapping between the Python version used in GitHub Actions matrix builds, and
# the used Tox environment.
#python =
#    3.6: py3-ci
#    3.7: py3-ci
#    3.8: py3-ci
#    3.9: py3-ci
